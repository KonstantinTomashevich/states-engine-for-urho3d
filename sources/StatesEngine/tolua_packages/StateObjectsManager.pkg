$using namespace StatesEngine;
$using namespace Urho3D;
module StatesEngine
{
class StateObjectsManager : public StateObject
{
    StateObjectsManager (Urho3D::Context *context);
    bool ReInitAll (Urho3D::String typeName);
    bool UpdateAll (Urho3D::String typeName, float timeStep);
    bool DisposeAll (Urho3D::String typeName);
    bool IsUseLog ();
    void SetIsUseLog (bool isUseLog);
    virtual ~StateObjectsManager ();

    StateObject *Lua_Get @ Get (Urho3D::String typeName);
    void Lua_Add @ Add (StateObject *object);
    bool Lua_Remove @ Remove (StateObject *object, bool dontDelete = false);
    StateObject *Lua_Create @ Create (Urho3D::String typeName);
    Urho3D::Vector <StateObject *> Lua_GetAll @ GetAll (Urho3D::String typeName);
    void Lua_RemoveAll @ RemoveAll (Urho3D::String typeName, bool dontDelete = false);
    bool IsContain (Urho3D::String typeName);
    int CountOf (Urho3D::String typeName);
}
}
